---
layout: post
title:  "자바 개념 정리"
date:   2019-01-13 10:08:45 +0200
categories: JAVA
---
##1. 변수란?

1. 변하는 수
2. 하나의 값을 저장할 수 있는 공간

##2. 변수의 타입(data type)
문자 - char
***
숫자
정수 : byte, short, int, long
실수 : float, double
논리 : boolean

##3. 변수의 타입(data type)
기본형 : byte, short, int, long, float, double, boolean
참조형 : 기본형을 제외한 나머지(String, System ...), 객체의 주소를 저장

##4. 변수의 선언방법
타입 변수명;
~~~
int score;
score = 100;
int score = 100;
~~~
##5. 변수 명명규칙(Naming convention)
* 대소문자가 구분되어 길이에 제한이 없다.
* 예약어를 사용해서는 안된다.(int, double, public, void main....)
* 숫자로 시작해서는 안된다.
* 특수문자는 __와 $만을 사용한다.

#6. 명명규칙 - 권장사항
* 클래스 이름의 첫 글자는 항상 대문자로 한다 (변수와 메서드 이름의 첫 글자는 항상 소문자로한다.)
* 여러 단어 이름은 단어의 첫글자를 대문자로 한다 (setName, getName)
* 상수의 이름은 대문자로 한다. 단어는 '__'로 구분한다_ (PI, MAX_NUMBER)

##7. 변수, 상수
변수(variable) - 하나의 값을 저장하기 위한 공간
상수(constant) - 한 번만 값을 저장할 수 있는 공간
ex)
~~~
int score = 100; //정수형 변수 score를 선언
score = 200; //score 값을 200으로 변경
final int MAX = 200; //정수형 상수 MAX를 선언
MAX = 300; //error, final로 선언한 변수의 값은 바꿀 수 없음
~~~

##8. 문자와 문자열
~~~
char ch = 'A';
char ch = 'AB'//error

String s1 = 'AB'; //문자열
String s2 = '자바 강의 토요일 1교시'; //문자열
~~~

##9. 형변환(casting)
* 값의 타입을 다른 타입으로 변환하는 것.
* boolean을 제외한 7개의 기본형은 서로 형변환이 가능하다.
~~~
float f = 1.6f
int i = (int)f;
~~~
int -> char  
(char)65   
 'A'
***
 char -> int
(int)'A'
  65
***
 float -> int
(int)1.6f
 1
***
 int -> float
 (float)10
 10.0f


##10. 연산자
연산자 - 어떠한 기능을 수행하는 기호 + - * / 등...
피연산자 - 연산자의 작업 대상(변수, 상수....)
ex) a+b
##11. 연산자의 종류
단항 연산자 : +, -, ++, --, !
이항 연산자 :
* 산술 : +, -, *, /, %, <<, >>*
* 비교 : >, <, >=, <=, ==, !=
* 논리 : %%, \\\\, &, ^, \
삼항 연산자 : ?:
대입 연산자 : =

##12. 연산자 우선수위
* 괄호의 우선순위가 제일 높다
* 단항 > 이항 > 삼항
* 연산자의 연산 진행방향은 왼쪽에서 오른쪽이다. 단, 단항, 대입 연산자만 오른쪽에서 왼쪽이다.
~~~
3 * 4 * 5 = 60
~~~
~~~
x = y = 3
~~~
~~~
int result = x+y*3;
~~~

##13. 증감 연산자 (++, --)
증감연산자(++) : 피연산자의 값을 1 증가시킨다.
감소연산자(--) : 피연산자의 값을 1 감소시킨다.

~~~
int i = 5;
int j = 0;

//전위형(값이 참조되기 전에 증가시킨다)
j = ++i; //j값은 6
//후위형(값이 참조된 후에 증가시킨다)
j = i++ //j값은 5
~~~

##14. 나머지 연산자 (%)
* 나누기한 나머지를 반환한다.
* 홀수, 짝수 등 배수 검사에 주로 사용
~~~
int share = 10 / 8; //share의 값 1
int remain - 10 % 8; //remain의 값 2
~~~
